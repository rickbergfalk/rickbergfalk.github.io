{"data":{"site":{"siteMetadata":{"title":"sql-in-js","author":"Rick Bergfalk"}},"markdownRemark":{"id":"cbb29a81-084b-52ec-a11f-0913de35923a","excerpt":"This post is part of a series detailing the work involved to slim down SQLPad’s JavaScript bundle size. Read the introductory post.First some love for…","html":"<p><em>This post is part of a series detailing the work involved to slim down SQLPad’s JavaScript bundle size. <a href=\"/20190428-bundle-battle/\">Read the introductory post</a>.</em></p>\n<h2>First some love for antd</h2>\n<p>Before getting into this one I want to express some appreciation for <a href=\"https://ant.design/\">Ant Design</a> and antd.</p>\n<p>antd is an amazing component library. This is subjective sure, but of the various React component libraries out there, I personally like the look of antd the most. It has a nice balance of having a modern clean look without being too flat. It has a nice density about it. The component APIs felt right and it was a pleasure using the components.</p>\n<p>And there are so many components. All the usual components are there like buttons and inputs, but then there are <a href=\"https://ant.design/components/cascader/\">cascading selections</a> and <a href=\"https://ant.design/components/steps/\">steps</a> and <a href=\"https://ant.design/components/auto-complete/\">AutoCompletes</a> and <a href=\"https://ant.design/components/mention/\">mentions</a> and <a href=\"https://ant.design/components/select/\">selects with tag modes</a> and <a href=\"https://ant.design/components/calendar/\">a calendar</a> and <a href=\"https://ant.design/components/tree/\">trees</a> and <a href=\"https://ant.design/components/timeline/\">timelines</a> and <a href=\"https://ant.design/components/drawer/\">drawers</a> and my favorite <a href=\"https://ant.design/components/modal/\">modals that animate open from the click location</a>.</p>\n<p>If you need a component, antd probably already has it.</p>\n<p>Unfortunately all that comes with a cost of a larger JavaScript bundle.</p>\n<p>When I set out to update SQLPad’s UI, I initially decided on antd because I wanted a library that had everything. I wanted the design to be cohesive, and I wanted it to be easy for others to expand on the UI if necessary. Instead of dealing with a random assortment of components I built, someone could simply take from the component library of antd.</p>\n<p>I think that’s a great benefit for a project, but I’m not sure if it is worth the cost for SQLPad.</p>\n<p>I ended up building my own tree and table components. The other big component experiences are a code editor and a charting library (also not antd).</p>\n<p>I should have maybe thought about this a bit more before taking on a UI component conversion, but my component needs are pretty basic. Buttons, inputs, modals, toasts, and some tabs… I’m set. I don’t need a lot of the fancy antd components listed above. For those I do need, I can expand on some primitive react UI libraries like <a href=\"https://ui.reach.tech/\">Reach UI</a> and <a href=\"https://github.com/downshift-js/downshift\">downshift</a> and still keep the bundle small.</p>\n<h2>Removing antd</h2>\n<p>This is going to take a while, but I’ve settled on a plan.</p>\n<p>Fortunately for me, antd uses old-fashioned CSS to style its components.</p>\n<p>Since I like the look and feel of antd, I’ve decided to copy the pieces of style I like from the components I can like buttons and inputs. I’m not going to aim for implementing 100% of the antd style and functionality, just the basics of the design. Doing this will also give me some freedom to alter the styles as I see fit for some non-antd use cases (like the query editor toolbar).</p>\n<p>I’ve just decided this post is going to be like a live-blog of this effort because its going to take a while.</p>\n<h3>Button</h3>\n<p>The Button component was the first to convert. It invovled wrapping a regular html button with some css and logic around when to use what class.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> styles <span class=\"token keyword\">from</span> <span class=\"token string\">\"./Button.module.css\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Button</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> children<span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">,</span> className<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>rest <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> classNames <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>styles<span class=\"token punctuation\">.</span>btn<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>type <span class=\"token operator\">===</span> <span class=\"token string\">\"primary\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    classNames<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>styles<span class=\"token punctuation\">.</span>primary<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>type <span class=\"token operator\">===</span> <span class=\"token string\">\"danger\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    classNames<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>styles<span class=\"token punctuation\">.</span>danger<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>className<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    classNames<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>className<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>button className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>classNames<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>rest<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>TO BE CONTINUED…</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">              bundle  ~2.58 MB\n-               antd  ~?.?? MB\n+       ?? ??? ?????  ~?.?? MB\n-------------------------------\n          new bundle  ~?.?? MB</code></pre></div>","frontmatter":{"title":"Bundle Battle 3 - antd","date":"April 30, 2019","description":"The one where I forgot what its like to write html"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/20190430-bundle-battle-3/","previous":{"fields":{"slug":"/20190429-bundle-battle-2/"},"frontmatter":{"title":"Bundle Battle 2 - react-virtualized, react-window"}},"next":null}}